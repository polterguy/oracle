
// CRUD create endpoint inserting one record into your ads table in your oracle database taking content with authentication and authorisation for root roles
.arguments
   content:string
.description:CRUD create endpoint inserting one record into your ads table in your oracle database taking content with authentication and authorisation for root roles
.type:crud-create

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up database connection.
data.connect:[generic|oracle]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:ads
      return-id:bool:true
      values

   // Creating embeddings for ad and inserting into vss_ads.
   .token
   set-value:x:@.token
      strings.concat
         .:"Bearer "
         config.get:"magic:openai:key"

   // Creating embeddings for question by invoking OpenAI.
   http.post:"https://api.openai.com/v1/embeddings"
      headers
         Authorization:x:@.token
         Content-Type:application/json
      payload
         model:text-embedding-ada-002
         input:x:@.arguments/*/content
      convert:true

   // Sanity checking above invocation
   if
      not
         and
            mte:x:@http.post
               .:int:200
            lt:x:@http.post
               .:int:300
      .lambda

         // Oops, error - Logging error and returning status code to caller.
         lambda2hyper:x:@http.post
         log.error:Something went wrong while invoking OpenAI
            message:x:@http.post/*/content/*/error/*/message
            status:x:@http.post
            error:x:@lambda2hyper
         throw:Something went wrong while we tried to invoke OpenAI, check your log for details
            public:bool:true
            status:int:400

   // Inserting our embedding.
   .embedding
   set-value:x:@.embedding
      strings.concat
         .:[
         strings.join:x:@http.post/*/content/*/data/0/*/embedding/*
            .:,
         .:]
   data.execute:insert into vss_ads (rowid, embedding_vss) values (@id, @embedding)
      id:x:@data.create
      embedding:x:@.embedding

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
